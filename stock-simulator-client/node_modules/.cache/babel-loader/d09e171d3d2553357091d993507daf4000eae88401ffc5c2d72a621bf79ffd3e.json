{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nexport function useSimulation() {\n  _s();\n  const [simulationRunning, setSimulationRunning] = useState(false);\n  const [simulationData, setSimulationData] = useState({\n    stocks: [],\n    autoplayers: []\n  });\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    let interval;\n    if (simulationRunning) {\n      interval = setInterval(fetchSimulationData, 2000);\n    } else {\n      setSimulationData({\n        stocks: [],\n        autoplayers: []\n      });\n    }\n    return () => clearInterval(interval);\n  }, [simulationRunning]);\n  const fetchSimulationData = () => {\n    fetch('http://localhost:3001/api/data').then(response => response.json()).then(data => {\n      if (data.error) {\n        setError(data.error);\n        setSimulationRunning(false);\n      } else {\n        setSimulationData(data);\n        setError(null);\n      }\n    }).catch(err => {\n      setError('Failed to fetch simulation data.');\n      setSimulationRunning(false);\n    });\n  };\n  const startSimulation = parameters => {\n    fetch('http://localhost:3001/api/start', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(parameters)\n    }).then(response => response.json()).then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setSimulationRunning(true);\n        setError(null);\n      }\n    }).catch(err => {\n      setError('Failed to start simulation.');\n    });\n  };\n  const stopSimulation = () => {\n    fetch('http://localhost:3001/api/stop').then(response => response.json()).then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setSimulationRunning(false);\n        setError(null);\n      }\n    }).catch(err => {\n      setError('Failed to stop simulation.');\n    });\n  };\n  return {\n    simulationRunning,\n    simulationData,\n    error,\n    startSimulation,\n    stopSimulation\n  };\n}\n_s(useSimulation, \"D/tZYawJHx3mm0FHaJiJPb0Hx7s=\");","map":{"version":3,"names":["useState","useEffect","useSimulation","_s","simulationRunning","setSimulationRunning","simulationData","setSimulationData","stocks","autoplayers","error","setError","interval","setInterval","fetchSimulationData","clearInterval","fetch","then","response","json","data","catch","err","startSimulation","parameters","method","headers","body","JSON","stringify","stopSimulation"],"sources":["D:/WORK/20241012_Stock_Market_Game_2/2-stock-game/stock-simulator-client/src/hooks/useSimulation.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nexport function useSimulation() {\r\n  const [simulationRunning, setSimulationRunning] = useState(false);\r\n  const [simulationData, setSimulationData] = useState({ stocks: [], autoplayers: [] });\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n    if (simulationRunning) {\r\n      interval = setInterval(fetchSimulationData, 2000);\r\n    } else {\r\n      setSimulationData({ stocks: [], autoplayers: [] });\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [simulationRunning]);\r\n\r\n  const fetchSimulationData = () => {\r\n    fetch('http://localhost:3001/api/data')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error);\r\n          setSimulationRunning(false);\r\n        } else {\r\n          setSimulationData(data);\r\n          setError(null);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setError('Failed to fetch simulation data.');\r\n        setSimulationRunning(false);\r\n      });\r\n  };\r\n\r\n  const startSimulation = (parameters) => {\r\n    fetch('http://localhost:3001/api/start', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(parameters),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error);\r\n        } else {\r\n          setSimulationRunning(true);\r\n          setError(null);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setError('Failed to start simulation.');\r\n      });\r\n  };\r\n\r\n  const stopSimulation = () => {\r\n    fetch('http://localhost:3001/api/stop')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error);\r\n        } else {\r\n          setSimulationRunning(false);\r\n          setError(null);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setError('Failed to stop simulation.');\r\n      });\r\n  };\r\n\r\n  return {\r\n    simulationRunning,\r\n    simulationData,\r\n    error,\r\n    startSimulation,\r\n    stopSimulation,\r\n  };\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}