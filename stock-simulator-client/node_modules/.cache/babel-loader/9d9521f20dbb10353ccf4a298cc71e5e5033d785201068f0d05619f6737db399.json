{"ast":null,"code":"var _jsxFileName = \"D:\\\\WORK\\\\20241012_Stock_Market_Game_2\\\\2-stock-game\\\\stock-simulator-client\\\\src\\\\Pages\\\\App.js\",\n  _s = $RefreshSig$();\n// src/components/App.js\nimport React, { useState, useEffect } from 'react';\nimport SimulationControl from '../components/SimulationControl';\nimport StocksList from '../components/StocksList';\nimport AutoplayerList from '../components/AutoplayerList';\nimport NavigationBar from '../components/Navbar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [simulationRunning, setSimulationRunning] = useState(false);\n  const [simulationData, setSimulationData] = useState({\n    stocks: [],\n    autoplayers: []\n  });\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    let interval;\n    if (simulationRunning) {\n      interval = setInterval(fetchSimulationData, 2000); // Fetch data every 2 seconds\n    } else {\n      setSimulationData({\n        stocks: [],\n        autoplayers: []\n      });\n    }\n    return () => clearInterval(interval);\n  }, [simulationRunning]);\n  const fetchSimulationData = () => {\n    fetch('http://localhost:3001/api/data').then(response => response.json()).then(data => {\n      if (data.error) {\n        setError(data.error);\n        setSimulationRunning(false);\n      } else {\n        setSimulationData(data);\n        setError(null);\n      }\n    }).catch(err => {\n      setError('Failed to fetch simulation data.');\n      setSimulationRunning(false);\n    });\n  };\n  const startSimulation = parameters => {\n    fetch('http://localhost:3001/api/start', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(parameters)\n    }).then(response => response.json()).then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setSimulationRunning(true);\n        setError(null);\n      }\n    }).catch(err => {\n      setError('Failed to start simulation.');\n    });\n  };\n  const stopSimulation = () => {\n    fetch('http://localhost:3001/api/stop').then(response => response.json()).then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setSimulationRunning(false);\n        setError(null);\n      }\n    }).catch(err => {\n      setError('Failed to stop simulation.');\n    });\n  };\n\n  // Your other state and functions here...\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Stock Market Simulator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(SimulationControl, {\n        onSimulationStart: startSimulation,\n        onSimulationStop: stopSimulation,\n        simulationRunning: simulationRunning\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this), simulationRunning && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Stocks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(StocksList, {\n          stocks: simulationData.stocks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Autoplayers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(AutoplayerList, {\n          autoplayers: simulationData.autoplayers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"D/tZYawJHx3mm0FHaJiJPb0Hx7s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","SimulationControl","StocksList","AutoplayerList","NavigationBar","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","simulationRunning","setSimulationRunning","simulationData","setSimulationData","stocks","autoplayers","error","setError","interval","setInterval","fetchSimulationData","clearInterval","fetch","then","response","json","data","catch","err","startSimulation","parameters","method","headers","body","JSON","stringify","stopSimulation","Router","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSimulationStart","onSimulationStop","_c","$RefreshReg$"],"sources":["D:/WORK/20241012_Stock_Market_Game_2/2-stock-game/stock-simulator-client/src/Pages/App.js"],"sourcesContent":["// src/components/App.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport SimulationControl from '../components/SimulationControl';\r\nimport StocksList from '../components/StocksList'; \r\nimport AutoplayerList from '../components/AutoplayerList';\r\nimport NavigationBar from '../components/Navbar';\r\n\r\nfunction App() {\r\n  const [simulationRunning, setSimulationRunning] = useState(false);\r\n  const [simulationData, setSimulationData] = useState({ stocks: [], autoplayers: [] });\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n    if (simulationRunning) {\r\n      interval = setInterval(fetchSimulationData, 2000); // Fetch data every 2 seconds\r\n    } else {\r\n      setSimulationData({ stocks: [], autoplayers: [] });\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [simulationRunning]);\r\n\r\n  const fetchSimulationData = () => {\r\n    fetch('http://localhost:3001/api/data')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error);\r\n          setSimulationRunning(false);\r\n        } else {\r\n          setSimulationData(data);\r\n          setError(null);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setError('Failed to fetch simulation data.');\r\n        setSimulationRunning(false);\r\n      });\r\n  };\r\n\r\n  const startSimulation = (parameters) => {\r\n    fetch('http://localhost:3001/api/start', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(parameters),\r\n    })\r\n      .then((response) => response.json())\r\n            .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error);\r\n        } else {\r\n          setSimulationRunning(true);\r\n          setError(null);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setError('Failed to start simulation.');\r\n      });\r\n     \r\n  };\r\n\r\n  const stopSimulation = () => {\r\n    fetch('http://localhost:3001/api/stop')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error);\r\n        } else {\r\n          setSimulationRunning(false);\r\n          setError(null);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setError('Failed to stop simulation.');\r\n      });\r\n  };\r\n\r\n// Your other state and functions here...\r\n\r\nreturn (\r\n    <Router>\r\n    <div className=\"container\">\r\n    <h1>Stock Market Simulator</h1>\r\n    {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    <SimulationControl\r\n      onSimulationStart={startSimulation}\r\n      onSimulationStop={stopSimulation}\r\n      simulationRunning={simulationRunning}\r\n    />\r\n    {simulationRunning && (\r\n      <>\r\n        <h2>Stocks</h2>\r\n        <StocksList stocks={simulationData.stocks} />\r\n        <h2>Autoplayers</h2>\r\n        <AutoplayerList autoplayers={simulationData.autoplayers} />\r\n      </>\r\n    )}\r\n  </div>\r\n  </Router>\r\n);\r\n}\r\n\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}