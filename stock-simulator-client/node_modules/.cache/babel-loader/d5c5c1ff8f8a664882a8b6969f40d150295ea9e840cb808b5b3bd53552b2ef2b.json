{"ast":null,"code":"var _jsxFileName = \"D:\\\\WORK\\\\20241012_Stock_Market_Game_2\\\\2-stock-game\\\\stock-simulator-client\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport SimulationControl from './SimulationControl';\nimport Stocks from './Stocks';\nimport AutoplayerList from './AutoplayerList';\nimport NavigationBar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [simulationRunning, setSimulationRunning] = useState(false);\n  const [simulationData, setSimulationData] = useState({\n    stocks: [],\n    autoplayers: []\n  });\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    let interval;\n    if (simulationRunning) {\n      interval = setInterval(fetchSimulationData, 2000); // Fetch data every 2 seconds\n    } else {\n      setSimulationData({\n        stocks: [],\n        autoplayers: []\n      });\n    }\n    return () => clearInterval(interval);\n  }, [simulationRunning]);\n  const fetchSimulationData = () => {\n    fetch('http://localhost:3001/api/data').then(response => response.json()).then(data => {\n      if (data.error) {\n        setError(data.error);\n        setSimulationRunning(false);\n      } else {\n        setSimulationData(data);\n        setError(null);\n      }\n    }).catch(err => {\n      setError('Failed to fetch simulation data.');\n      setSimulationRunning(false);\n    });\n  };\n  const startSimulation = parameters => {\n    fetch('http://localhost:3001/api/start', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(parameters)\n    }).then(response => response.json()).then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setSimulationRunning(true);\n        setError(null);\n      }\n    }).catch(err => {\n      setError('Failed to start simulation.');\n    });\n  };\n  const stopSimulation = () => {\n    fetch('http://localhost:3001/api/stop').then(response => response.json()).then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setSimulationRunning(false);\n        setError(null);\n      }\n    }).catch(err => {\n      setError('Failed to stop simulation.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Stock Market Simulator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(SimulationControl, {\n        onSimulationStart: startSimulation,\n        onSimulationStop: stopSimulation,\n        simulationRunning: simulationRunning\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Stocks, {\n            simulationRunning: simulationRunning,\n            stocks: simulationData.stocks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/stocks\",\n          children: /*#__PURE__*/_jsxDEV(Stocks, {\n            simulationRunning: simulationRunning,\n            stocks: simulationData.stocks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/autoplayers\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Autoplayers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), simulationRunning ? /*#__PURE__*/_jsxDEV(AutoplayerList, {\n              autoplayers: simulationData.autoplayers\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"The simulation is not running. Please start the simulation to view autoplayer data.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"D/tZYawJHx3mm0FHaJiJPb0Hx7s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Switch","SimulationControl","Stocks","AutoplayerList","NavigationBar","jsxDEV","_jsxDEV","App","_s","simulationRunning","setSimulationRunning","simulationData","setSimulationData","stocks","autoplayers","error","setError","interval","setInterval","fetchSimulationData","clearInterval","fetch","then","response","json","data","catch","err","startSimulation","parameters","method","headers","body","JSON","stringify","stopSimulation","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSimulationStart","onSimulationStop","exact","path","_c","$RefreshReg$"],"sources":["D:/WORK/20241012_Stock_Market_Game_2/2-stock-game/stock-simulator-client/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport SimulationControl from './SimulationControl';\r\nimport Stocks from './Stocks';\r\nimport AutoplayerList from './AutoplayerList';\r\nimport NavigationBar from './Navbar';\r\n\r\nfunction App() {\r\n  const [simulationRunning, setSimulationRunning] = useState(false);\r\n  const [simulationData, setSimulationData] = useState({ stocks: [], autoplayers: [] });\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n    if (simulationRunning) {\r\n      interval = setInterval(fetchSimulationData, 2000); // Fetch data every 2 seconds\r\n    } else {\r\n      setSimulationData({ stocks: [], autoplayers: [] });\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [simulationRunning]);\r\n\r\n  const fetchSimulationData = () => {\r\n    fetch('http://localhost:3001/api/data')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error);\r\n          setSimulationRunning(false);\r\n        } else {\r\n          setSimulationData(data);\r\n          setError(null);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setError('Failed to fetch simulation data.');\r\n        setSimulationRunning(false);\r\n      });\r\n  };\r\n\r\n  const startSimulation = (parameters) => {\r\n    fetch('http://localhost:3001/api/start', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(parameters),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error);\r\n        } else {\r\n          setSimulationRunning(true);\r\n          setError(null);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setError('Failed to start simulation.');\r\n      });\r\n  };\r\n\r\n  const stopSimulation = () => {\r\n    fetch('http://localhost:3001/api/stop')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error);\r\n        } else {\r\n          setSimulationRunning(false);\r\n          setError(null);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setError('Failed to stop simulation.');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <NavigationBar />\r\n      <div className=\"container\">\r\n        <h1>Stock Market Simulator</h1>\r\n        {error && <div className=\"alert alert-danger\">{error}</div>}\r\n        <SimulationControl\r\n          onSimulationStart={startSimulation}\r\n          onSimulationStop={stopSimulation}\r\n          simulationRunning={simulationRunning}\r\n        />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            {/* You can create a home page component or redirect to /stocks */}\r\n            <Stocks simulationRunning={simulationRunning} stocks={simulationData.stocks} />\r\n          </Route>\r\n          <Route path=\"/stocks\">\r\n            <Stocks simulationRunning={simulationRunning} stocks={simulationData.stocks} />\r\n          </Route>\r\n          <Route path=\"/autoplayers\">\r\n            <div>\r\n              <h2>Autoplayers</h2>\r\n              {simulationRunning ? (\r\n                <AutoplayerList autoplayers={simulationData.autoplayers} />\r\n              ) : (\r\n                <p>The simulation is not running. Please start the simulation to view autoplayer data.</p>\r\n              )}\r\n            </div>\r\n          </Route>\r\n          {/* Add more routes as needed */}\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}